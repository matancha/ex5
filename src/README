matancha
molodoy

==========================
=    File Description    =
==========================
Filter.java-This class implements abstract filter

FilterFactory.java-class that implements filter factory for creating filter of files.

BetweenFilter.java-filter that implements filter that verify that size of file is between to inserted numbers.

ContainsFilter.java-class that implements filter that check if name of file is contains an inserted string.

ExecutableFilter.java-class that implements filter that check that inserted file is executable
and verify it with string that was inserted.

FileFeaturesFilter.java-class that implements filter that check if some file is "...ble" according to feature.

FileNameFilter.java-class that implements filter that verify some properties of name of file that is checked.

GreaterThanFilter-class that implements filter that verify that size of checked file is less than upper bound.

HiddenFilter.java-class that  implements filter that check that inserted file is hidden
and verify it with string that was inserted.

IdenticalNameFilter.java-class that implements filter that check
if name of file is the same as inserted file's name.

NegFilter.java-class that  implements decorator for inserted filter.
 It will return opposite result of inserted filter.
In other words it will return false when original filter will return true and wise versa.

PrefixFilter.java-class that implements filter that verify if a filter starts with inserted prefix.

SizeFilter.java-class that implements abstract filter that are connected in some way to size bounds.

AllFilter.java-class that implements filter that passes each file.

SmallerThanFilter.java-class that implements filter that verify
that size of checked file is greater than lower bound.

SuffixFilter.java-class that implements filter that verify if a filter ends with inserted suffix.

WritableFilter.java-class that implements filter that check that inserted file is writable
and verify it with answer that was inserted.

TypeOneException.java-class  that implements exceptions that thrown by order and filter.
When this exception is thrown function is continue to work,but there
is a massage where warning was founded.

BadParametersException.java-exception that thrown in case that parameters of order or filter are not appropriate.

TypeTwoException.java-this class implements Exception that thrown in case when There is no way
to continue filtering of files,consequently it will be stoped and
Error will be printed according to message of the Exception.

ParametersNumberException.java-class that implements exception that thrown in case of wrong number of parameters.
For example if there were just 1 or 0 parameters inserted,or on the contrary,3 or more.

ComandsFileException.java-class that implements exception that thrown in case
that format of commands file is not appropriate.


================
=    Design    =
================
We decided to implement main class Directory processor that is just read and send files to the parser and
receive back subsections. Each of subsections is contain filters,order and warnings list.
After that DirectoryProcessor for each of subsections print all warnings and files that are
appropriate for all filters. It print it according to order of subsection.
Parser receive commandFile and divide it to subsections according to command File. It read each string
in command file and create send those strings to filter and order factories.
Filter factory create filter according to inserted parameters and throw error if string was not appropriate.
In this case default filter (all filter) is created.
Order factory also creates order according to inserted parameters and throw exception in case of invalid parameters.
In this case will bew created default order (abs order).
================================
=    Implementation details    =
================================


==============================
=    Answers to questions    =
==============================

Except Exception of java that we use,there are two Types of exceptions:Type 1 and type 2.
Type 1 exception is thrown by filter and order factory. There is just Bad parameters exception.
Firstly we implemented Type one exceptions much more modular and understandable,for example there were
NegativeParameterException,WrongFilterNameException,WrongNumbersOrderException and some others.
They also had messages as Type two exceptions that will be described next. But we had to change everything
to be just BadParameters,because there is no need in messages,we had just to write Warning in line...
Consequently we decided that those exceptions are superfluous,because there is no place except our code,
where user will see it.
Type 2 exception is thrown by parser or DirectoryProcessor in case that there is no way to continue filtering
of files.There are 2 exceptions that are extends from Type 2 exception:
BadSubsectionNameException and ParametersNumberException.
BadSubsectionNameException is thrown in case of invalid name of subsection e.g. not "FILTER" or not "ORDER".
ParametersNumberException is thrown in case of wrong number of parameters.
We decided not to do system of exceptions more complicated to make it more readable.